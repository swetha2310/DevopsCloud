pipeline {
    agent any
    tools { 
        maven 'maven' 
        jdk 'JAVA_HOME' 
        }
    environment {
        def BRANCH_NAME ='GIT_BRANCH'
    }
    stages {
      stage('GIT checkout') {
           steps {
               script{
                   if (env.GIT_BRANCH.contains('master')) {
                echo 'Hello from master branch'
                git branch: 'master', url: 'https://github.com/swetha2310/DevopsCloud.git'
                }
               else {
                echo "Run this stage only if the branch is not master"
                git branch: 'dev', url: 'https://github.com/swetha2310/DevopsCloud.git' 
               }
               }
          }
        }
       stage('Maven Build') {
           steps {
               sh "mvn clean install"
            }
        }
        stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
            steps{
                withSonarQubeEnv('sonarqube-8.9.2') { 
                // If you have configured more than one global server connection, you can specify its name
//              sh "${scannerHome}/bin/sonar-scanner"
                sh "mvn sonar:sonar"
                }
            }
       }
       stage('Quality Gate'){
           steps{
                timeout(time: 1, unit: 'HOURS') {
                //error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
                //
                    waitForQualityGate abortPipeline: true
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                        sh "exit 1"
                        }
                }
           }    
        }
    }
}
